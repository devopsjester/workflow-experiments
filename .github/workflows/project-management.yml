# This is a basic workflow to help you get started with Actions

name: project-management

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-project-item:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Get repository id
      uses: octokit/graphql-action@v2.x
      id: get-repo
      with:
        query: |
          query GetRepositoryNodeId{
            repository(owner:"devopsjester", name:"workflow-experiments") {
              id
            }
            user(login:"devopsjester") {
              projectNext(number:3) {
                id
              }
            }
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GRAPH_TOKEN }}

    - name: Create issue
      uses: octokit/graphql-action@v2.x
      id: create-issue
      with:
        query: |
          mutation CreateIssue{
            createIssue(input: { body: "TBD", projectIds: [], title:"some title", repositoryId: "${{ fromJson(steps.get-repo.outputs.data).repository.id }}" }) {
              issue {
                id
              }
            }
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GRAPH_TOKEN }}
        
    - name: Add issue as project item
      uses: octokit/graphql-action@v2.x
      id: add-project-item
      with:
        query: |
          mutation addIssueToProject {
            addProjectNextItem(input:{projectId:"${{ fromJson(steps.get-repo.outputs.data).user.projectNext.id }}", contentId: "${{ fromJson(steps.create-issue.outputs.data).createIssue.issue.id }}"}) {
              projectNextItem {
                id
                title
              }
            }
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GRAPH_TOKEN }}
    - name: display created issue id
      run: echo "Create issue no. ${{ fromJson(steps.add-project-item.outputs.data).projectNextItem.issue.id }} - ${{ fromJson(steps.add-project-item.outputs.data).projectNextItem.issue.title }}"
      
      
