# This is a basic workflow to help you get started with Actions

name: project-management

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-project-item:
    runs-on: ubuntu-latest
    steps:
    - name: Get repository id
      uses: octokit/graphql-action@v2.x
      id: get-repo
      with:
        query: |
          query GetRepositoryNodeId{
            repository(owner:"devopsjester", name:"workflow-experiments") {
              id
            }
            user(login:"devopsjester") {
              projectNext(number:3) {
                id
              }
            }
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: show repo data
      run: |
        echo "data: ${{ fromJson(steps.get-repo.outputs.data) }}"
        echo "Repo node Id: ${{ fromJson(steps.get-repo.outputs.data).repository.id }}"
        echo "Project: ${{ fromJson(steps.get-repo.outputs.data).user.projectNext }}"
        echo "Project node Id: ${{ fromJson(steps.get-repo.outputs.data).user.projectNext.id }}"

    - name: Create issue in project (beta)
      uses: octokit/graphql-action@v2.x
      id: create-work-item
      with:
        query: |
          mutation CreateIssueInProject{
            createIssue(input: { body: "TBD", projectIds: [fromJson(steps.get-repo.outputs.data).user.projectNext.id], title:"some title", repositoryId: "${{ fromJson(steps.get-repo.outputs.data).repository.id }}" }) {
              issue {
                id
              }
            }
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: display created issue id
      run: echo "Create issue #${{ fromJson(steps.create-work-item.outputs.data).issue.id }}"
      
